import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.BHpayLOB.js";const o=JSON.parse('{"title":"GitHub Pages 部署指南","description":"","frontmatter":{},"headers":[],"relativePath":"deployment-guide.md","filePath":"deployment-guide.md","lastUpdated":1751962834000}'),t={name:"deployment-guide.md"};function h(e,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="github-pages-部署指南" tabindex="-1">GitHub Pages 部署指南 <a class="header-anchor" href="#github-pages-部署指南" aria-label="Permalink to &quot;GitHub Pages 部署指南&quot;">​</a></h1><p>本文档详细介绍如何将 High QA 文档站点部署到 GitHub Pages。</p><h2 id="📋-部署概述" tabindex="-1">📋 部署概述 <a class="header-anchor" href="#📋-部署概述" aria-label="Permalink to &quot;📋 部署概述&quot;">​</a></h2><p>High QA 文档站点使用 VitePress 构建，通过 GitHub Actions 自动部署到 GitHub Pages。整个部署过程完全自动化，无需手动操作。</p><h2 id="🚀-自动部署流程" tabindex="-1">🚀 自动部署流程 <a class="header-anchor" href="#🚀-自动部署流程" aria-label="Permalink to &quot;🚀 自动部署流程&quot;">​</a></h2><h3 id="_1-触发条件" tabindex="-1">1. 触发条件 <a class="header-anchor" href="#_1-触发条件" aria-label="Permalink to &quot;1. 触发条件&quot;">​</a></h3><p>部署会在以下情况下自动触发：</p><ul><li>推送代码到 <code>main</code> 分支</li><li>手动在 GitHub Actions 页面触发</li></ul><h3 id="_2-部署步骤" tabindex="-1">2. 部署步骤 <a class="header-anchor" href="#_2-部署步骤" aria-label="Permalink to &quot;2. 部署步骤&quot;">​</a></h3><ol><li><strong>检出代码</strong>：获取最新的代码</li><li><strong>设置环境</strong>：安装 Node.js 20.x</li><li><strong>安装依赖</strong>：运行 <code>npm ci</code> 安装项目依赖</li><li><strong>构建项目</strong>：运行 <code>npm run build</code> 构建静态文件</li><li><strong>上传构建产物</strong>：将构建结果上传到 GitHub Pages</li><li><strong>部署</strong>：将文件部署到 GitHub Pages 服务</li></ol><h3 id="_3-构建产物" tabindex="-1">3. 构建产物 <a class="header-anchor" href="#_3-构建产物" aria-label="Permalink to &quot;3. 构建产物&quot;">​</a></h3><ul><li><strong>构建目录</strong>：<code>docs/.vitepress/dist</code></li><li><strong>静态文件</strong>：包含所有 HTML、CSS、JS 和资源文件</li><li><strong>访问地址</strong>：<code>https://Maxwellos.github.io</code></li></ul><h2 id="⚙️-配置文件说明" tabindex="-1">⚙️ 配置文件说明 <a class="header-anchor" href="#⚙️-配置文件说明" aria-label="Permalink to &quot;⚙️ 配置文件说明&quot;">​</a></h2><h3 id="github-actions-工作流" tabindex="-1">GitHub Actions 工作流 <a class="header-anchor" href="#github-actions-工作流" aria-label="Permalink to &quot;GitHub Actions 工作流&quot;">​</a></h3><p><strong>文件位置</strong>：<code>.github/workflows/deploy.yml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deploy VitePress site to GitHub Pages</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  workflow_dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">permissions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  contents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">read</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  pages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">write</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  id-token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">write</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">concurrency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cancel-in-progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Checkout</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Setup Node.js</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/setup-node@v4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          node-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm ci</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Build with VitePress</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm run build</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Upload artifact</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/upload-pages-artifact@v3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docs/.vitepress/dist</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">github-pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ steps.deployment.outputs.page_url }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    needs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">build</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deploy to GitHub Pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/deploy-pages@v4</span></span></code></pre></div><h3 id="vitepress-配置" tabindex="-1">VitePress 配置 <a class="header-anchor" href="#vitepress-配置" aria-label="Permalink to &quot;VitePress 配置&quot;">​</a></h3><p><strong>文件位置</strong>：<code>docs/.vitepress/config.ts</code></p><p>关键配置项：</p><ul><li><code>base: &#39;/&#39;</code> - 因为使用的是用户站点（Maxwellos.github.io）</li><li><code>outDir: &#39;dist&#39;</code> - 构建输出目录</li><li><code>cleanUrls: true</code> - 生成干净的 URL</li></ul><h2 id="📝-部署前检查清单" tabindex="-1">📝 部署前检查清单 <a class="header-anchor" href="#📝-部署前检查清单" aria-label="Permalink to &quot;📝 部署前检查清单&quot;">​</a></h2><p>在推送代码前，请确保：</p><ul><li>[ ] 所有文档内容已更新</li><li>[ ] 图片和资源文件路径正确</li><li>[ ] 本地构建测试通过</li><li>[ ] 内链和外链都能正常工作</li><li>[ ] 导航和侧边栏配置正确</li></ul><h2 id="🔧-本地测试" tabindex="-1">🔧 本地测试 <a class="header-anchor" href="#🔧-本地测试" aria-label="Permalink to &quot;🔧 本地测试&quot;">​</a></h2><p>在推送到 GitHub 之前，建议先进行本地测试：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开发模式（实时预览）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建测试</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 预览构建结果</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span></span></code></pre></div><h2 id="🐛-常见问题解决" tabindex="-1">🐛 常见问题解决 <a class="header-anchor" href="#🐛-常见问题解决" aria-label="Permalink to &quot;🐛 常见问题解决&quot;">​</a></h2><h3 id="_1-构建失败" tabindex="-1">1. 构建失败 <a class="header-anchor" href="#_1-构建失败" aria-label="Permalink to &quot;1. 构建失败&quot;">​</a></h3><p><strong>问题</strong>：GitHub Actions 构建失败 <strong>解决方案</strong>：</p><ul><li>检查 Node.js 版本兼容性</li><li>确认所有依赖都在 <code>package.json</code> 中声明</li><li>查看构建日志定位具体错误</li></ul><h3 id="_2-页面无法访问" tabindex="-1">2. 页面无法访问 <a class="header-anchor" href="#_2-页面无法访问" aria-label="Permalink to &quot;2. 页面无法访问&quot;">​</a></h3><p><strong>问题</strong>：部署成功但页面显示 404 <strong>解决方案</strong>：</p><ul><li>检查 GitHub Pages 设置是否正确</li><li>确认 <code>base</code> 配置是否正确</li><li>等待 DNS 传播（可能需要几分钟）</li></ul><h3 id="_3-样式或图片丢失" tabindex="-1">3. 样式或图片丢失 <a class="header-anchor" href="#_3-样式或图片丢失" aria-label="Permalink to &quot;3. 样式或图片丢失&quot;">​</a></h3><p><strong>问题</strong>：页面显示但样式或图片加载失败 <strong>解决方案</strong>：</p><ul><li>检查资源文件路径是否正确</li><li>确认文件已包含在构建产物中</li><li>检查大小写敏感性问题</li></ul><h3 id="_4-部署权限问题" tabindex="-1">4. 部署权限问题 <a class="header-anchor" href="#_4-部署权限问题" aria-label="Permalink to &quot;4. 部署权限问题&quot;">​</a></h3><p><strong>问题</strong>：部署时出现权限错误 <strong>解决方案</strong>：</p><ul><li>确认 GitHub Pages 已启用</li><li>检查仓库的 Actions 权限设置</li><li>确认工作流文件中的权限配置正确</li></ul><h2 id="📊-监控部署状态" tabindex="-1">📊 监控部署状态 <a class="header-anchor" href="#📊-监控部署状态" aria-label="Permalink to &quot;📊 监控部署状态&quot;">​</a></h2><h3 id="查看部署状态" tabindex="-1">查看部署状态 <a class="header-anchor" href="#查看部署状态" aria-label="Permalink to &quot;查看部署状态&quot;">​</a></h3><ol><li>访问 GitHub 仓库的 &quot;Actions&quot; 选项卡</li><li>查看最新的工作流运行状态</li><li>点击具体的运行记录查看详细日志</li></ol><h3 id="部署成功指标" tabindex="-1">部署成功指标 <a class="header-anchor" href="#部署成功指标" aria-label="Permalink to &quot;部署成功指标&quot;">​</a></h3><ul><li>✅ 构建步骤全部成功</li><li>✅ 文件成功上传到 GitHub Pages</li><li>✅ 部署环境显示绿色状态</li><li>✅ 网站可以正常访问</li></ul><h2 id="📈-性能优化建议" tabindex="-1">📈 性能优化建议 <a class="header-anchor" href="#📈-性能优化建议" aria-label="Permalink to &quot;📈 性能优化建议&quot;">​</a></h2><h3 id="_1-构建优化" tabindex="-1">1. 构建优化 <a class="header-anchor" href="#_1-构建优化" aria-label="Permalink to &quot;1. 构建优化&quot;">​</a></h3><ul><li>使用 <code>npm ci</code> 而不是 <code>npm install</code></li><li>启用构建缓存</li><li>压缩图片资源</li></ul><h3 id="_2-部署优化" tabindex="-1">2. 部署优化 <a class="header-anchor" href="#_2-部署优化" aria-label="Permalink to &quot;2. 部署优化&quot;">​</a></h3><ul><li>使用 CDN 加速静态资源</li><li>启用 GZIP 压缩</li><li>配置合适的缓存策略</li></ul><h3 id="_3-监控优化" tabindex="-1">3. 监控优化 <a class="header-anchor" href="#_3-监控优化" aria-label="Permalink to &quot;3. 监控优化&quot;">​</a></h3><ul><li>设置构建失败通知</li><li>监控部署时间</li><li>定期检查死链接</li></ul><h2 id="🔗-相关链接" tabindex="-1">🔗 相关链接 <a class="header-anchor" href="#🔗-相关链接" aria-label="Permalink to &quot;🔗 相关链接&quot;">​</a></h2><ul><li><a href="https://docs.github.com/en/pages" target="_blank" rel="noreferrer">GitHub Pages 官方文档</a></li><li><a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress 官方文档</a></li><li><a href="https://docs.github.com/en/actions" target="_blank" rel="noreferrer">GitHub Actions 官方文档</a></li></ul><hr><p>如果在部署过程中遇到问题，请查看 GitHub Actions 的运行日志，或联系开发团队寻求帮助。</p>`,55)]))}const g=i(t,[["render",h]]);export{o as __pageData,g as default};
